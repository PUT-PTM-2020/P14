<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Weather Station</title>

  <style>
    a.tilelink {
      text-decoration: none;
      height: 80px;
      color: #ffffff;
    }

    a.tilelink:hover {
      text-decoration: none;
      height: 80px;
      color: #ffffff;
    }

    a.tilelink1 {
      text-decoration: none;
      height: 40px;
      color: #ffffff;
      font-family: Verdana;
    }

    a.tilelink1:hover {
      text-decoration: none;
      height: 40px;
      color: #ffffff;
    }

    tr {
      text-align: center
    }

    .bg-secondary {
      background-color: darkgray;
    }
  </style>

  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
</head>

<body class="bg-secondary">

  <section id="top">
    <nav class="navbar navbar-dark bg-dark flex-column">
      <a href="./" class="tilelink">
        <font size="7">Weather Station</font>
      </a>
      <a class="tilelink1 text-white">
        <font size="4">Data</font>
      </a>
      <a href="about" class="tilelink1">
        <font size="4">About</font>
      </a>
    </nav>
  </section>

  <div class="my-5"></div>

  <section>
    <div class="container-fluid">
      <h4 id="error" class="text-white text-center m-0">Weather data available on the device</h4>
    </div>
    <hr class="my-4">
    <div id="phase1">
      <p id="info" class="lead text-white text-center"></p>
      <div class="my-2"></div>
      <form>
        <div class="container-fluid col-md-4">
          <div id="amount" class="form-group text-center text-white" style="display: none;">
            <input type="number" min="0" class="form-control mb-2 mr-sm-2 mb-sm-0" id="offset-field"
              placeholder="Offset">
            <div class="my-3"></div>

            <input type="number" min="0" class="form-control mb-2 mr-sm-2 mb-sm-0" id="amount-field"
              placeholder="Amount">
            <div class="my-3"></div>

            <div class="form-group">
              <select class="form-control" id="form-field">
                <option value="raw">Raw data</option>
                <option value="line">Line chart</option>
                <option value="bar">Bar chart</option>
              </select>
            </div>
            <div class="my-3"></div>

            <button type="button" onclick="getData()" class="btn btn-light">Submit</button>
          </div>
        </div>
      </form>
    </div>
  </section>

  <div class="my-5"></div>


  <div class="row justify-content-center">
    <div class="col-auto">
      <table class="table table-responsive table-dark" id="table" style="width: 100%;display: none;">
        <thead>
          <tr>
            <th>No.</th>
            <th>Record ID</th>
            <th>Inner Sensor?</th>
            <th>Temperature [C]</th>
            <th>Humidity [%]</th>
            <th>Date</th>
            <th>Time</th>
          </tr>
        </thead>
        <tbody id="fetched_data">
        </tbody>
      </table>
    </div>
  </div>

  <div class="d-flex justify-content-center">
    <div id="spinner" class="spinner-grow" role="status">
      <span class="sr-only">Loading data...</span>
    </div>

    <div class="container-fluid" id="progress-bar" style="display: none;">
      <div class="progress">
        <div id="progress-bar-handle" class="progress-bar bg-warning" style="width: 25%"></div>
      </div>
    </div>
  </div>

  <div class="my-5"></div>

  <canvas id="myChart" width="400" height="400"></canvas>


  <footer class="bg-black small text-center text-white-50">
    <div class="container">
      2020 &copy COPYRIGHT BY POZNAN UNIVERSITY OF TECHNOLOGY | All rights reserved
    </div>
  </footer>

  <div class="my-2"></div>

</body>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js"></script>
<script type="text/javascript">

  var parent = document.getElementById('fetched_data');
  var url = window.location.href;
  var amount = 0;

  var url = 'http://192.168.0.50/';

  var to = url.lastIndexOf('/');
  to = to == -1 ? url.length : to + 1;
  url = url.substring(0, to);

  window.onload = function () {
    setTimeout(() => {
      fetch(url + 'all')
        .then(res => res.json())
        .then(obj => {
          amount = obj.amount;
          document.getElementById('info').innerHTML = 'The device has <b>' + obj.amount + '</b> logs.<br>Please specify the amount to fetch, the offset (0 means latest logs) and data representation.';
          document.getElementById('amount').style.display = 'block';
          document.getElementById('spinner').style.display = 'none';
        })
        .catch(e => console.log(e));
    }, 1000);
  };

  async function fetchJson(url, offset, ix) {
    let response = await fetch(url + 'all/logs', {
      method: 'POST',
      headers: {
        'Content-Type': 'text/plain'
      },
      body: '{"offset":' + offset + ',"index":' + ix + '}'
    });

    let data = await response.json();
    return data;
  }

  function getData() {
    var offset = parseInt(document.getElementById('offset-field').value);
    var N = parseInt(document.getElementById('amount-field').value) + 1;

    var formField = document.getElementById("form-field");
    var form = formField.options[formField.selectedIndex].value;

    if (!Number.isInteger(offset) || offset < 0) {
      document.getElementById('error').innerHTML = 'Given offset is not a positive integer';
      return;
    } else if (!Number.isInteger(N) || N < 0) {
      document.getElementById('error').innerHTML = 'Given amount is not a positive integer';
      return;
    } else if (N == 0) {
      document.getElementById('error').innerHTML = 'Won\'t fetch nothing';
      return;
    }

    document.getElementById('error').innerHTML = 'Weather data available on the device';
    document.getElementById('spinner').style.display = 'block';
    document.getElementById('phase1').style.display = 'none';

    var ix = 0;
    var fetchedData = [];
    var loaded = false;

    for (var i = 0; i < N; i++) {
      setTimeout(() => {
        fetchJson(url, offset, ix)
          .then(obj => {

            if (obj.amount == 0) {
              document.getElementById('error').innerHTML = 'There are no more logs to fetch in this range.';
              return;
            }

            if (form === "raw") {
              var row = document.createElement('tr');
              parent.appendChild(row);

              document.getElementById('spinner').style.display = 'none';
              document.getElementById('table').style.display = 'block';

              var data = document.createElement('td');
              data.setAttribute('class', 'text-white ')
              data.textContent = ix + 1;
              row.appendChild(data);

              Object.keys(obj).forEach(key => {
                var data = document.createElement('td');
                data.setAttribute('class', 'text-white ')
                data.textContent = obj[key];
                row.appendChild(data);
              });

            } else {
              fetchedData.push(obj);

              document.getElementById('spinner').style.display = 'none';
              document.getElementById('progress-bar').style.display = 'block';

              var width = Math.round((fetchedData.length / N) * 100);
              console.log('N: ' + N + '; Width: ' + width + '; Ix: ' + ix);

              document.getElementById('progress-bar-handle').setAttribute('style', 'width:' + width + '%;');

              if (ix == N - 2) {
                document.getElementById('progress-bar').style.display = 'none';
                document.getElementById('spinner').style.display = 'block';
                loaded = true;
              }
            }

            ix++;
          });
      }, (i + 1) * 2200);
    }

    setInterval(() => {
      if (loaded) {
        console.log(fetchedData);

        if (form === 'bar') {
          document.getElementById('spinner').style.display = 'none';
          var ctx = document.getElementById('myChart').getContext('2d');
          var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
              labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
              datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                backgroundColor: [
                  'rgba(255, 99, 132, 0.2)',
                  'rgba(54, 162, 235, 0.2)',
                  'rgba(255, 206, 86, 0.2)',
                  'rgba(75, 192, 192, 0.2)',
                  'rgba(153, 102, 255, 0.2)',
                  'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                  'rgba(255, 99, 132, 1)',
                  'rgba(54, 162, 235, 1)',
                  'rgba(255, 206, 86, 1)',
                  'rgba(75, 192, 192, 1)',
                  'rgba(153, 102, 255, 1)',
                  'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
              }]
            },
            options: {
              scales: {
                yAxes: [{
                  ticks: {
                    beginAtZero: true
                  }
                }]
              }
            }
          });
        }
      }

      loaded = false;
    }, 2200);
  }
</script>

</html>